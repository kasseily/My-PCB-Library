
                                        *Switches & Buttons
*------------------------------------------------------------------------------
*Buttons
*-------------------------------------------------------------------
*Push Button Normally Opened
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  Push_Button_NO node1  node2  PARAMS:
+ closed=0
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1 node2 int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*Push Button Normally Closed
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  Push_Button_NC node1  node2  PARAMS:
+ closed=1
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1 node2 int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*-------------------------
*DPST Push Button
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  DPST_Push_Button node1p node1m node2p node2m  PARAMS:
+ closed=0
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1p node1m int1 0 Smod
S2 node2p node2m int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*-------------------------
*SPST Sw Button
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  SPST_Switch node1  node2  PARAMS:
+ closed=0
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1 node2 int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*-------------------------
*DPST Sw Button
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  DPST_Switch node1+ node1- node2+ node2-  PARAMS:
+ closed=0
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1+ node1- int1 0 Smod
S2 node2+ node2- int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*---------------------
*SPDT Sw Button
* state: if nodeUP_closed>0 - switch closed between common_node & nodeUP else nodeDOWN
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  SPDT_Switch common_node nodeUP nodeDown  PARAMS:
+ nodeUP_closed=1
+ Rclosed=1m
+ Ropen=1Meg
e1 int1 0 Value={if(nodeUP_closed>0,1,0)}
S1 common_node nodeUP int1 0 Smod1
S2 common_node nodeDown int1 0 Smod2
.model Smod1 Vswitch(Ron={Rclosed} Roff={Ropen})
.model Smod2 Vswitch(Ron={Ropen} Roff={Rclosed})
.ends
*---------------------
*DPDT Sw Button
* state: if nodesUP_closed>0 - switch closed between common_node1 & node1up  and common_node2 & node2up else node1down and node2down
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  DPDT_Switch common_node1 common_node2 node1up node1down node2up node2down  PARAMS:
+ nodesUP_closed=1
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(nodesUP_closed>0,1,0)}
S1 common_node1 node1up int1 0 Smod1
S2 common_node1 node1down int1 0 Smod2
S3 common_node2 node2up int1 0 Smod1
S4 common_node2 node2down int1 0 Smod2
.model Smod1 Vswitch(Ron={Rclosed} Roff={Ropen})
.model Smod2 Vswitch(Ron={Ropen} Roff={Rclosed})
.ends
*------------------------------------
*3PST Sw Button
* state: if closed>0 - closed else open
* Rclosed -  Closed state resistance
* Ropen -  Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  3PST_Switch node1+ node1- node2+ node2- node3+ node3- PARAMS:
+ closed=0
+ Rclosed=1m
+ Ropen=1Meg
B1 int1 0 V={if(closed>0,1,0)}
S1 node1+ node1- int1 0 Smod
S2 node2+ node2- int1 0 Smod
S3 node3+ node3- int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*---------------------
*3PDT Sw Button
*state: if nodesUP_closed>0 - switch closed between common_node1 & node1up  and common_node2 & node2up else node1down and node2down
*(Ropen/Rclosed < 1E10)
.SUBCKT  3PDT_Switch common_node1 common_node2  common_node3 node1up node1down node2up node2down node3up node3down PARAMS:
+ nodesUP_closed=1
+ Rclosed=1m
+ Ropen=1Meg
e1 int1 0 Value={if(nodesUP_closed>0,1,0)}
S1 common_node1 node1up int1 0 Smod1
S2 common_node1 node1down int1 0 Smod2
S3 common_node2 node2up int1 0 Smod1
S4 common_node2 node2down int1 0 Smod2
S5 common_node3 node3up int1 0 Smod1
S6 common_node3 node3down int1 0 Smod2
.model Smod1 Vswitch(Ron={Rclosed} Roff={Ropen})
.model Smod2 Vswitch(Ron={Ropen} Roff={Rclosed})
.ends
*------------------------------------------------------------------------------------------------------------------------------------------
*Switches
*-------------------------------------------------------------------------------------------------------------------------------------------
* Time Controlled Switch Models
*-----------------------------------------------------------
* For DC and AC analyses, the switch will be Open.
* tClose -      time at which switch begins to close
* ttran -       time required to switch states (must be realistic, not 0)
* Rclosed -   Closed state resistance
* Ropen -     Open state resistance (Ropen/Rclosed < 1E10)
.SUBCKT  Time_Close_Switch  node1  node2  PARAMS:
+ tClose=0
+ ttran=1u
+ Rclosed=1m
+ Ropen=1Meg
V1 int1 0 pulse(0 1 {tClose} {ttran} 1 1e20 1e20)
S1 node1 node2 int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
* ----------------------------------------------
* tOpen -     time at which switch begins to open
* ttran -     time required to switch states (must be realistic, not 0)
* Rclosed -   Closed state resistance
* Ropen -     Open state resistance (Ropen/Rclosed < 1E10
.SUBCKT  Time_Open_Switch   node1  node2  PARAMS:
+ tOpen=0
+ ttran=1u
+ Rclosed=1m
+ Ropen=1Meg
V1 int1 0 pulse(1 0 {tOpen} {ttran} 1 1e20 1e20)
S1 node1 node2 int1 0 Smod
.model Smod Vswitch(Ron={Rclosed} Roff={Ropen})
.ends
*-----------------------------------------------------------
* tSwitch -   time at which switch begins to switch
* ttran -     time required to switch states (must be realistic, not 0)
* Rclosed -   Closed state resistance
* Ropen -     Open state resistance (Ropen/Rclosed < 1E10
.SUBCKT  SPDT_Time_Controlled_Switch  node_common nodeUP  nodeDown  PARAMS:
+ tSwitch=0
+ ttran=1u
+ Rclosed=1m
+ Ropen=1Meg
V1 int1 0 pulse(1 0 {tSwitch} {ttran} 1 1e20 1e20)
S1 node_common nodeUP int1 0 Smod1
S2 node_common nodeDown int1 0 Smod2
.model Smod1 Vswitch(Ron={Rclosed} Roff={Ropen})
.model Smod2 Vswitch(Ron={Ropen} Roff={Rclosed})
.ends
*--------------------------------------------------------------
* Voltage controlled switches
*--------------
* VT    - threshold voltage
* VH    - hysteresis voltage
* RON   - Open state resistance
* ROFF  - Closed state resistance
* ON    - Initial state - ON
* OFF  - Initial state - OF
.SUBCKT  Voltage_Controlled_Switch_Hysteresis   node1  node2  cn+ cn- PARAMS:
+ VT=0
+ VH=0
+ RON=1
+ ROFF=1Meg
+ ON=""
+ OFF=""
S1 node1  node2  cn+ cn- Smod ON
.model Smod Vswitch(VT={VT} VH={VH} Ron={RON} Roff={ROFF})
.ends
*-----------------------------------------
* VON    - Control voltage for On state
* VOFF   - Control voltage for Off state
* RON   - Open state resistance
* ROFF  - Closed state resistance
.SUBCKT  Voltage_Controlled_Switch_Smooth_Trans   node1  node2  cn+ cn- PARAMS:
+ VON=1
+ VOFF=0
+ RON=1
+ ROFF=1Meg
S1 node1  node2  cn+ cn- Smod
.model Smod Vswitch(VON={VON} VOFF={VOFF} Ron={RON} Roff={ROFF})
.ends

*--------------------------------------------------------------
* Current controlled switches
*--------------
* IT    - threshold current
* IH    - hysteresis current
* RON   - Open state resistance
* ROFF  - Closed state resistance
* ON    - Initial state - ON
* OFF  - Initial state - OF
.SUBCKT  Current_Controlled_Switch_Hysteresis   node1  node2 cn+ cn- PARAMS:
+ IT=0
+ IH=0
+ RON=1m
+ ROFF=1Meg
+ ON=""
+ OFF=""
Vctrl cn+ cn- DC 0
W1 node1  node2  Vctrl Smod ON
.model Smod Iswitch(IT={IT} IH={IH} Ron={RON} Roff={ROFF})
.ends
*---------------------------------------
* ION    - Control current for On state
* IOFF   - Control current for Off state
* RON   - Open state resistance
* ROFF  - Closed state resistance
.SUBCKT  Current_Controlled_Switch_Smooth_Trans   node1  node2 cn+ cn- PARAMS:
+ ION=1m
+ IOFF=0
+ RON=1
+ ROFF=1Meg
Vctrl cn+ cn- DC 0
W1 node1  node2  Vctrl Smod
.model Smod Iswitch(ION={ION} IOFF={IOFF} Ron={RON} Roff={ROFF})
.ends
*--------------------------------------------------------------
*Relays
*--------------------
*SPST Normally Opened - Single Pole, Single Throw
*L_C     - Coil Inductance
*R_C    - Coil Resistance
*RON      - Open state resistance
*ROFF  - Closed state resistance
*ION     - Control current for On state
*IOFF     - Control current for Off state
.SUBCKT  SPST_Relay_NO node1 node2  cn+ cn- PARAMS:
+ L_C=1u
+ R_C=100
+ RON=1
+ ROFF=1e12
+ ION=1m
+ IOFF=0
L_C cn+ int1 {L_C}
R_C int1 int2 {R_C}
V_C int2 cn- 0
W1 node1  node2  V_C Smod
.model Smod Iswitch(ION={ION} IOFF={IOFF} Ron={RON} Roff={ROFF})
.ends
*----------------------------------------
*SPST Normally Closed - Single Pole, Single Throw
*L_C     - Coil Inductance
*R_C    - Coil Resistance
*RON      - Open state resistance
*ROFF  - Closed state resistance
*ION     - Control current for On state
*IOFF     - Control current for Off state
.SUBCKT  SPST_Relay_NC node1 node2  cn+ cn- PARAMS:
+ L_C=1u
+ R_C=100
+ RON=1
+ ROFF=1e12
+ ION=1m
+ IOFF=0
L_C cn+ int1 {L_C}
R_C int1 int2 {R_C}
V_C int2 cn- 0
W1 node1  node2  V_C Smod
.model Smod Iswitch(ION={ION} IOFF={IOFF} Ron={ROFF} Roff={RON})
.ends
*------------------------------------
*DPST = Double Pole, Single Throw
*L_C     - Coil Inductance
*R_C    - Coil Resistance
*RON      - Open state resistance
*ROFF  - Closed state resistance
*ION     - Control current for On state
*IOFF     - Control current for Off stat
.SUBCKT  DPST_Relay node1+ node1- node2+ node2- cn+ cn- PARAMS:
+ L_C=1u
+ R_C=100
+ RON=1
+ ROFF=1e12
+ ION=1m
+ IOFF=0
L_C cn+ int1 {L_C}
R_C int1 int2 {R_C}
V_C int2 cn- 0
W1 node1+  node1-  V_C Smod
W2 node2+  node2-  V_C Smod
.model Smod Iswitch(ION={ION} IOFF={IOFF} Ron={RON} Roff={ROFF})
.ends
*------------------------------------
*SPDT = Double Pole, Single Throw
*L_C     - Coil Inductance
*R_C    - Coil Resistance
*RON      - Open state resistance
*ROFF  - Closed state resistance
*ION     - Control current for On state
*IOFF     - Control current for Off stat
.SUBCKT  SPDT_Relay common_node node1 node2 cn+ cn- PARAMS:
+ L_C=1u
+ R_C=100
+ RON=1
+ ROFF=1e12
+ ION=1m
+ IOFF=0
L_C cn+ int1 {L_C}
R_C int1 int2 {R_C}
V_C int2 cn- 0
W1 common_node  node1  V_C Smod1
W2 common_node  node2  V_C Smod2
.model Smod1 Iswitch(ION={ION} IOFF={IOFF} Ron={RON} Roff={ROFF})
.model Smod2 Iswitch(ION={ION} IOFF={IOFF} Ron={ROFF} Roff={RON})
.ends
*------------------------------------
*DPDT = Double Pole, Double Throw
*L_C     - Coil Inductance
*R_C    - Coil Resistance
*RON      - Open state resistance
*ROFF  - Closed state resistance
*ION     - Control current for On state
*IOFF     - Control current for Off stat
.SUBCKT  DPDT_Relay common_node1 common_node2 node1+ node1- node2+ node2- cn+ cn- PARAMS:
+ L_C=1u
+ R_C=100
+ RON=1
+ ROFF=1e12
+ ION=1m
+ IOFF=0
L_C cn+ int1 {L_C}
R_C int1 int2 {R_C}
V_C int2 cn- 0
W1 common_node1  node1+  V_C Smod1
W2 common_node1  node1-  V_C Smod2
W3 common_node2  node2+  V_C Smod1
W4 common_node2  node2-  V_C Smod2
.model Smod1 Iswitch(ION={ION} IOFF={IOFF} Ron={RON} Roff={ROFF})
.model Smod2 Iswitch(ION={ION} IOFF={IOFF} Ron={ROFF} Roff={RON})
.ends
*------------------------------------S

